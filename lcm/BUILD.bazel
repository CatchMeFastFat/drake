# -*- python -*-

<<<<<<< HEAD
load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_googletest",
    "drake_cc_library",
    "drake_cc_package_library",
)
=======
load("//tools:drake.bzl", "drake_cc_googletest", "drake_cc_library")
>>>>>>> intial
load("//tools/skylark:drake_py.bzl", "drake_py_test")
load("//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

<<<<<<< HEAD
drake_cc_package_library(
    name = "lcm",
    deps = [
        ":interface",
        ":lcm_log",
        ":mock",
        ":real",
        ":translator_base",
    ],
)

=======
>>>>>>> intial
drake_cc_library(
    name = "interface",
    hdrs = [
        "drake_lcm_interface.h",
        "drake_lcm_message_handler_interface.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "mock",
    srcs = ["drake_mock_lcm.cc"],
    hdrs = ["drake_mock_lcm.h"],
    deps = [
        ":interface",
    ],
)

drake_cc_library(
<<<<<<< HEAD
    name = "real",
=======
    name = "lcm",
>>>>>>> intial
    srcs = [
        "drake_lcm.cc",
        "lcm_receive_thread.cc",
    ],
    hdrs = [
        "drake_lcm.h",
        "lcm_receive_thread.h",
    ],
    deps = [
        ":interface",
        "//common:essential",
        "@lcm",
    ],
)

drake_cc_library(
    name = "lcm_log",
    srcs = [
        "drake_lcm_log.cc",
    ],
    hdrs = [
        "drake_lcm_log.h",
    ],
    deps = [
        ":interface",
        "//common:essential",
        "@lcm",
    ],
)

drake_cc_library(
    name = "lcmt_drake_signal_utils",
    testonly = 1,
    srcs = ["lcmt_drake_signal_utils.cc"],
    hdrs = ["lcmt_drake_signal_utils.h"],
    deps = [
        "//common:essential",
        "//lcmtypes:drake_signal",
    ],
)

drake_cc_library(
    name = "translator_base",
    hdrs = [
        "translator_base.h",
    ],
    deps = [
        "//common:essential",
        "//common:unused",
    ],
)

# === test/ ===

drake_cc_googletest(
    name = "drake_lcm_interface_test",
    deps = [
        ":lcmt_drake_signal_utils",
        ":mock",
        "//common/test_utilities",
    ],
)

drake_cc_googletest(
    name = "drake_lcm_test",
    # Flaky because LCM self-test can fail (PR #7311)
    flaky = 1,
<<<<<<< HEAD
    deps = [
        ":lcmt_drake_signal_utils",
        ":real",
=======
    local = 1,
    deps = [
        ":lcm",
        ":lcmt_drake_signal_utils",
>>>>>>> intial
    ],
)

drake_cc_googletest(
    name = "drake_lcm_log_test",
<<<<<<< HEAD
=======
    local = 1,
>>>>>>> intial
    deps = [
        ":lcm_log",
        ":lcmt_drake_signal_utils",
    ],
)

drake_cc_googletest(
    name = "drake_mock_lcm_test",
    deps = [
        ":lcmt_drake_signal_utils",
        ":mock",
    ],
)

drake_cc_googletest(
    name = "lcmt_drake_signal_utils_test",
    deps = [
        ":lcmt_drake_signal_utils",
    ],
)

drake_py_test(
    name = "import_lcm_test",
    # TODO(jwnimmer-tri) Port this to drake_py_unittest.
    allow_import_unittest = True,
    deps = ["@lcm//:lcm-python"],
)

add_lint_tests()
