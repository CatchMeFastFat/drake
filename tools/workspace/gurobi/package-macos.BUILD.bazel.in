# -*- python -*-

load(
    "@drake//tools/install:install.bzl",
    "install",
)

licenses(["by_exception_only"])  # Gurobi

# This rule is only built if a glob() call fails.
genrule(
    name = "error-message",
    outs = ["error-message.h"],
<<<<<<< HEAD
    cmd = "echo 'error: Gurobi 8.0.0 is not installed at {gurobi_path}' && false",  # noqa
    visibility = ["//visibility:private"],
)

GUROBI_C_HDRS = glob([
    "gurobi-distro/include/gurobi_c.h",
]) or [":error-message.h"]

GUROBI_CXX_HDRS = glob([
=======
    cmd = "echo 'error: Gurobi 7.5.2 is not installed at {gurobi_path}' && false",  # noqa
    visibility = ["//visibility:private"],
)

GUROBI_HDRS = glob([
>>>>>>> intial
    "gurobi-distro/include/gurobi_c.h",
    "gurobi-distro/include/gurobi_c++.h",
]) or [":error-message.h"]

cc_library(
<<<<<<< HEAD
    name = "gurobi_c",
    hdrs = GUROBI_C_HDRS,
    includes = ["gurobi-distro/include"],
    linkopts = [
        "-L{gurobi_path}/lib",
        "-lgurobi80",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "gurobi_cxx",
    hdrs = GUROBI_CXX_HDRS,
    includes = ["gurobi-distro/include"],
    linkopts = [
        "-L{gurobi_path}/lib",
        "-lgurobi80",
        "-lgurobi_stdc++",
=======
    name = "gurobi",
    hdrs = GUROBI_HDRS,
    includes = ["gurobi-distro/include"],
    linkopts = [
        "-L{gurobi_path}/lib",
        "-lgurobi75",
>>>>>>> intial
    ],
    visibility = ["//visibility:public"],
)

<<<<<<< HEAD
# TODO(pvarin): Remove this alias and deprecation message after 2018-09-21
alias(
    name = "gurobi",
    actual = "gurobi_c",
    deprecation = "The @gurobi//:gurobi target is deprecated, \
                   you should use @gurobi//:gurobi_c instead",
    visibility = ["//visibility:public"],
)

=======
>>>>>>> intial
# For macOS, the Drake install step does not need any additional actions to
# install Gurobi, since Gurobi was already installed system-wide in /Library.
install(
    name = "install",
    visibility = ["//visibility:public"],
)
